#!/usr/bin/env python
from Crypto.Util.number import long_to_bytes

n = 104176920808444707134363566789644103637046138703732812593856489450966164422700871083271001476798525601830292237723021138499045286505397665962198734248957208942814238767855960753797521549548788530151996440657784060736603682776712677518537991291065233449586393186516770855075158900503486179189610821817031409223

flag3 = 80026450605919212347157319516655228661982088106956311148514121800139890113377161068043879513015347037232410178041918490832353137735848626795271143817272105057902549455690557715462777567966903851646207028020678373050285949287173514737755698953051536123368646144531895984034141177000138932645546381541544731963

flag7478 = 24789836942239403722795930341732835678691656750347230627416434227665247940527361150396455511246644544283832637661545664078814615114240744561273489461844843182114793772702713013603371781739673411384862756987736726406966123858749513205304608394157412210509128405578588422322912351914650629099969071449156118527

def modpow(x,m):
    ret = 1
    while m:
        if m % 2:
            ret = ret * x % n
        x = x * x % n
        m //= 2
    return ret

def extgcd(a,b):
    if b == 0:
        return a,1,0
    else:
        g,x,y = extgcd(b, a % b)
        return g, y, x - a // b * y

def modinv(x):
    g,a,b = extgcd(x,n)
    return a

if __name__ == '__main__':
    print long_to_bytes(flag3 * modinv(flag7478 * modpow(modinv(flag3),0x7478 // 3) % n) % n)
