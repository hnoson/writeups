#!/usr/bin/env python
from pwn import *
from Crypto.Util.number import bytes_to_long, inverse

if len(sys.argv) == 1:
    s = process('./chall')
else:
    s = remote('crypto.ctf.zer0pts.com', 10298)

m = '\x00\x02\x00'.ljust(1024 // 8, 'A')
s.sendafter('Message: ', m[3:])
m = bytes_to_long(m)

s.recvuntil('pubkey = (')
n = int(s.recvuntil(', ')[:-2], 0x10)
e = int(s.recvline(False)[:-1], 0x10)
s.recvuntil('signature = ')
sig = int(s.recvline(False), 0x10)
s.recvuntil('message: ')
M = int(s.recvline(False), 0x10)

def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

q = gcd(n, pow(sig, e, n) - m)
assert q != 1
assert q != n
log.info('q: %#x' % q)
p = n // q

phi = (p - 1) * (q - 1)
d = inverse(e, phi)
assert pow(pow(M, d, n), e, n) == M
log.info('d: %#x' % d)

s.sendlineafter('Signature: ', hex(pow(M, d, n))[2:])

s.interactive()
